// <auto-generated />
using System;
using AlertaChuva.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace AlertaChuva.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlertaChuva.API.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("LeituraId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double>("NivelAguaCm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("LeituraId")
                        .IsUnique();

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Leitura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("NivelAguaCm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Leituras");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("NivelAlertaMinimoCm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Alerta", b =>
                {
                    b.HasOne("AlertaChuva.API.Models.Leitura", "Leitura")
                        .WithOne("Alerta")
                        .HasForeignKey("AlertaChuva.API.Models.Alerta", "LeituraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leitura");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Leitura", b =>
                {
                    b.HasOne("AlertaChuva.API.Models.Sensor", "Sensor")
                        .WithMany("Leituras")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Sensor", b =>
                {
                    b.HasOne("AlertaChuva.API.Models.Usuario", "Usuario")
                        .WithMany("Sensores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Leitura", b =>
                {
                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Sensor", b =>
                {
                    b.Navigation("Leituras");
                });

            modelBuilder.Entity("AlertaChuva.API.Models.Usuario", b =>
                {
                    b.Navigation("Sensores");
                });
#pragma warning restore 612, 618
        }
    }
}
